#Make phylostratigraphy maps for apis mellifera and monomorium pharaonis, as well as make orthology calls with drosophila melanogaster
#File is run out of src/evolution directory

##Note that the user needs to download nodes.dmp from NCBI for rule makeBlastDB
##For ortholog calls, download OrthoDB databases, version 9. Just need the .fs files for each species, which is in this directory: https://www.orthodb.org/v9/download/odb9_fasta_metazoa.tgz. 
#Also get  https://www.orthodb.org/v9/download/odb9_OG2genes.tab to get species-specific .tab files, by filtering for all genes from a certain species (note that .tab files are already provided because the file is large)

#To include more species to blast against, download protein files, remove protein names after the space, and rename with a four letter code. Input the code, etc into data/codes.txt


TEST_SPEC = ["Amel","Mphar"]
ALL_SPEC = ["Amel","Mphar","Dmel"]

TAX_ID = ["7460","307658"]
TAX_ID_ALL = ["7460","307658","7227"] 

REFGENOMES, = glob_wildcards("../../data/evolution/extraRef/{ref}.fa")

THREADS = 16

rule all:
	input: expand("../../results/evolution/{test}_{ref}_blastAll_ps",zip,test=TEST_SPEC,ref=TAX_ID),"../../results/collectedPhylo.RData"

#Get a list of all genes for each species
rule getGenes:
	input: "../../data/evolution/data/{test}_prot.fa"
	output: "../temp/{test}_allProt"
	shell: """grep ">" {input} | tr -d ">" > {output}"""

#Edit header on all hymenoptera fasta files
rule editHeader:
	input: "../../data/evolution/extraRef/{ref}.fa"
	output: "../temp/{ref}_edit.fa"
	shell: "sed 's/>/>{wildcards.ref}_/' {input} | sed 's/ .*//' > {output}"

#Combine all hymenoptera fasta, make blast DB
rule combineFasta:
	input: expand("../temp/{ref}_edit.fa",ref=REFGENOMES)
	output: "../temp/allRef.fa","../temp/allRef.phr"
	shell: "cat ../temp/*_edit.fa > {output[0]}; makeblastdb -in {output[0]} -dbtype prot -out ../temp/allRef"

#Build taxonomy SQL database for all hymenopterans
rule taxDB_hym:
	input: expand("../temp/{ref}_edit.fa",ref=REFGENOMES)
	output: "../temp/taxonomy_extra.db"
	shell: """module load python/anaconda/2.7; ls ../temp/*_edit.fa | sed 's/.*\///' > ../temp/spec_list; \
			python makeTaxDB_extra.py ../temp/spec_list"""

#Blast transcripts against database of hymenopteran proteins and call phylostrata
rule blastAll:
	input: genes="../temp/{test}_allProt",tax="../temp/taxonomy_extra.db",db="../temp/allRef.phr",prot="../../data/evolution/{test}_prot.fa"
	output: "../../results/evolution/{test}_{ref}_blastAll_ps"
	shell: "module load python/anaconda/2.7; python getPS_blastAll.py {input[genes]} {output} {THREADS} {input[db]} {input[prot]} {wildcards.ref}"

#Get transcript-to-gene maps
rule transcriptGeneMap:
	input: "../../data/evolution/{test}.gff"
	output: "../../results/evolution/TGmap_{test}.txt"
	shell: """grep "protein_id" {input} | grep "gene=" | sed 's/.*gene=//' | sed 's/;.*protein_id=/\t/' | sed 's/;.*//' | sort | uniq > {output}"""

#Make blast database for each ODB9 protein file
rule makeBlastDB_OGG:
	input: "../../data/evolution/odb9/{ref}.fs"
	output: "../temp/{ref}.phr"
	shell: "makeblastdb -in {input} -dbtype prot -out ../temp/{wildcards.ref}"

#Perform genome-wide pairwise blast from NCBI protein files to ODB9 protein files to establish which OGGs to compare to
rule pairwiseBlast:
	input: ref="../temp/{ref}.phr",test="../../data/evolution/{test}_prot.fa"
	output: "../../results/evolution/{ref}_{test}_blastRes.tab"
	shell: "module load python/anaconda/2.7; python pairwiseBlast.py -s {input[test]} -d {input[ref]} -t {THREADS} -o {output}"


#Get Endopterygota OGGs. "EOG090R" is the prefix for all endopterygota genes
rule endOGG:
	input: geneList="../../results/evolution/{ref}_{test}_blastRes.tab", oggList="../../data/evolution/{ref}.tab"
	output: "../../results/evolution/{test}_{ref}_END"
	shell: "module load python/anaconda/2.7; sed 's/gnl.* //' {input[geneList]} | awk {{'print$2'}} | sort | uniq > ../temp/geneEdit; python2.7 getOGG.py ../temp/geneEdit {output} {THREADS} {input[oggList]} EOG090R"


#Get Aculeata OGGs. "EOG091C" is the prefix for all aculeata genes
rule acuOGG:
	input: geneList="../../results/evolution/{ref}_{test}_blastRes.tab", oggList="../../data/evolution/{ref}.tab"
	output: "../../results/evolution/{test}_{ref}_ACU"
	shell: "module load python/anaconda/2.7; sed 's/gnl.* //' {input[geneList]} | awk {{'print$2'}} | sort | uniq > ../temp/geneEdit; python2.7 getOGG.py ../temp/geneEdit {output} {THREADS} {input[oggList]} EOG091C"

#Collect ps results for downstream analysis
rule collectPS:
	input: expand("../../results/evolution/{test}_{ref}_ACU",zip,test=TEST_SPEC,ref=TAX_ID),
			expand("../../results/evolution/{test}_{ref}_END",zip,test=ALL_SPEC,ref=TAX_ID_ALL),
			expand("../../results/evolution/TGmap_{test}.txt",test=ALL_SPEC),
			expand("../../results/evolution/{test}_{ref}_blastAll_ps",zip,test=TEST_SPEC,ref=TAX_ID)
	output: "../../results/collectedPhylo.RData"
	shell: "Rscript collectPS.R"










